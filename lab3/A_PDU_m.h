//
// Generated file, do not edit! Created by nedtool 5.2 from A_PDU.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __A_PDU_M_H
#define __A_PDU_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>A_PDU.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet A_PDU
 * {
 *     int aid;
 *     int sourceAdd;
 *     int destAdd;
 *     string type;
 *     char data;
 * }
 * </pre>
 */
class A_PDU : public ::omnetpp::cPacket
{
  protected:
    int aid;
    int sourceAdd;
    int destAdd;
    ::omnetpp::opp_string type;
    char data;

  private:
    void copy(const A_PDU& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const A_PDU&);

  public:
    A_PDU(const char *name=nullptr, short kind=0);
    A_PDU(const A_PDU& other);
    virtual ~A_PDU();
    A_PDU& operator=(const A_PDU& other);
    virtual A_PDU *dup() const override {return new A_PDU(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getAid() const;
    virtual void setAid(int aid);
    virtual int getSourceAdd() const;
    virtual void setSourceAdd(int sourceAdd);
    virtual int getDestAdd() const;
    virtual void setDestAdd(int destAdd);
    virtual const char * getType() const;
    virtual void setType(const char * type);
    virtual char getData() const;
    virtual void setData(char data);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const A_PDU& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, A_PDU& obj) {obj.parsimUnpack(b);}


#endif // ifndef __A_PDU_M_H

